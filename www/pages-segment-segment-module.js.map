{"version":3,"sources":["./src/app/pages/segment/segment-routing.module.ts","./src/app/pages/segment/segment.page.html","./src/app/pages/segment/segment.page.ts","./src/app/pages/segment/segment.module.ts","./src/app/pages/segment/segment.page.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;AChBrC;AAAe,29CAA45C,iBAAiB,UAAU,iBAAiB,4BAA4B,wBAAwB,mFAAmF,iBAAiB,s3FAAs3F,E;;;;;;;;;;;;;;;;;;;;;;ACAn7I;AAEQ;IAO7C,WAAW,SAAX,WAAW;IACtB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAG3C,eAAU,GAAQ,EAAE,CAAC;IAHwB,CAAC;IAI9C,QAAQ;QACN,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAG,IAAI,CAAC,UAAU,IAAE,UAAU,EAAC;YAC7B,KAAI,IAAI,CAAC,GAAQ,CAAC,EAAE,CAAC,IAAE,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACrE,IAAG,CAAC,IAAE,CAAC,EAAC;oBACN,IAAI,EAAE,GAAQ,UAAU,GAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACtC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,GAAC,MAAM,CAAC;iBAClD;gBACD,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAC,MAAM,CAAC;aAC7D;SACF;aAAI;YACH,KAAI,IAAI,CAAC,GAAQ,CAAC,EAAE,CAAC,IAAE,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACrE,IAAG,CAAC,IAAE,CAAC,EAAC;oBACN,IAAI,EAAE,GAAQ,UAAU,GAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACtC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,GAAC,UAAU,CAAC;iBACtD;gBACD,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAC,UAAU,CAAC;aACjE;SACF;IACH,CAAC;CACF;;YArCQ,kEAAW;;AAOP,WAAW;IALvB,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,+EAAkC;;KAEnC,CAAC;GACW,WAAW,CA8BvB;AA9BuB;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AACM;AACF;AAEA;AAEuB;AAEvB;AACyB;AACf;IAa1C,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAX7B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,gFAAwB;YACxB,8EAAgB;YAChB,+DAAW;SACZ;QACD,YAAY,EAAE,CAAC,yDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;ACvB9B;AAAe,6GAA8C,mHAAmH,E","file":"pages-segment-segment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SegmentPage } from './segment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SegmentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SegmentPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Segment</ion-title>\\n  </ion-toolbar>\\n  <ion-segment value=\\\"\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n    <ion-segment-button value=\\\"\\\">\\n      <ion-label>Todos</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"DC Comics\\\">\\n      <ion-label>DC Comics</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Marvel\\\">\\n      <ion-label>Marvel</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Segments\\\">\\n      <ion-label>Segments</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list id='skeleton' class=\\\"animate__animated animate__fadeIn animate__faster\\\" *ngIf='(superHeroes | async)===null'>\\n    <ion-item *ngFor='let i of [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]'>\\n      <ion-label>\\n        <h3><ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></h3>\\n        <p><ion-skeleton-text animated style=\\\"width: 40%\\\"></ion-skeleton-text></p>\\n      </ion-label>\\n      <ion-skeleton-text animated style=\\\"width: 30%\\\" slot=\\\"end\\\"></ion-skeleton-text>\\n    </ion-item>\\n  </ion-list>\\n  <ion-list id=\\\"data\\\">\\n    <ion-item *ngFor='let heroe of (superHeroes | async) | filter:textSearch:\\\"publisher\\\"'>\\n      <ion-label>\\n        <h3>{{heroe.superhero}} <small>{{heroe.alter_ego}}</small></h3>\\n        <p>{{heroe.first_appearance}}</p>\\n      </ion-label>\\n      <ion-label slot=\\\"end\\\" class=\\\"ion-text-right\\\">{{heroe.publisher}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n  <br><br><br><br><br>\\n  <!-- Default Segment -->\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" id=\\\"segment-1\\\">\\n    <ion-segment-button value=\\\"friends\\\">\\n      <ion-label>Friends</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"enemies\\\">\\n      <ion-label>Enemies</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <br><br><br>\\n  <!-- Disabled Segment -->\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" disabled value=\\\"sunny\\\" id=\\\"segment-2\\\">\\n    <ion-segment-button value=\\\"sunny\\\">\\n      <ion-label>Sunny</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"rainy\\\">\\n      <ion-label>Rainy</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <br><br><br>\\n  <!-- Segment with anchors -->\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" id=\\\"segment-3\\\">\\n    <ion-segment-button value=\\\"dogs\\\">\\n      <ion-label>Dogs</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"cats\\\">\\n      <ion-label>Cats</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <br><br><br>\\n  <!-- Scrollable Segment -->\\n  <ion-segment scrollable value=\\\"heart\\\" id=\\\"segment-4\\\">\\n    <ion-segment-button value=\\\"home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"heart\\\">\\n      <ion-icon name=\\\"heart\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"pin\\\">\\n      <ion-icon name=\\\"pin\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"star\\\">\\n      <ion-icon name=\\\"star\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"call\\\">\\n      <ion-icon name=\\\"call\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"globe\\\">\\n      <ion-icon name=\\\"globe\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"basket\\\">\\n      <ion-icon name=\\\"basket\\\"></ion-icon>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <br><br><br>\\n  <!-- Segment with secondary color -->\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" color=\\\"secondary\\\" id=\\\"segment-5\\\">\\n    <ion-segment-button value=\\\"standard\\\">\\n      <ion-label>Standard</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"hybrid\\\">\\n      <ion-label>Hybrid</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"sat\\\">\\n      <ion-label>Satellite</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <br><br><br>\\n  <!-- Segment with default selection -->\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"javascript\\\" id=\\\"segment-6\\\">\\n    <ion-segment-button value=\\\"python\\\">\\n      <ion-label>Python</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"javascript\\\">\\n      <ion-label>Javascript</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-segment',\n  templateUrl: './segment.page.html',\n  styleUrls: ['./segment.page.scss'],\n})\nexport class SegmentPage implements OnInit{\n  constructor(private dataService:DataService){}\n\n  superHeroes:Observable<any>;\n  textSearch:string='';\n  ngOnInit(){\n    this.superHeroes=this.dataService.getHeroes();\n  }\n\n  segmentChanged(event){\n    this.textSearch=event.detail.value;\n    console.log(this.textSearch);\n    if(this.textSearch!='Segments'){\n      for(var K:number=1; K<=document.getElementsByTagName('br').length; K++){\n        if(K<=6){\n          var id:string='segment-'+K.toString();\n          document.getElementById(id).style.display='none';\n        }\n        document.getElementsByTagName('br')[K].style.display='none';\n      }\n    }else{\n      for(var K:number=1; K<=document.getElementsByTagName('br').length; K++){\n        if(K<=6){\n          var id:string='segment-'+K.toString();\n          document.getElementById(id).style.display='contents';\n        }\n        document.getElementsByTagName('br')[K].style.display='contents';\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SegmentPageRoutingModule } from './segment-routing.module';\n\nimport { SegmentPage } from './segment.page';\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SegmentPageRoutingModule, \n    ComponentsModule,\n    PipesModule\n  ],\n  declarations: [SegmentPage]\n})\nexport class SegmentPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWdtZW50LnBhZ2Uuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}